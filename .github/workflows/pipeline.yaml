- name: Configure AWS credentials
  uses: aws-actions/configure-aws-credentials@v1
  with:
    aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    aws-region: us-east-2

- name: Build Docker Image
  uses: docker/build-push-action@v2
  with:
    context: .
    push: true
    tags: ${{ secrets.ECR_REGISTRY }}/my-app:${{ github.sha }}

- name: Login to Amazon ECR
  id: login-ecr
  uses: aws-actions/amazon-ecr-login@v1


- name: Deploy to cluster
  id: deploy
  uses: kodermax/kubectl-aws-eks@master
  env:
    KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA_STAGING }}
  with:
    args: apply -f deployment.yml

- name: Verify Deployment
  uses: kodermax/kubectl-aws-eks@master
  env:
    KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
  with:
    args: rollout status deployment/my-app

- name: Check Deployment Status
  run: |
    if [ "$(kubectl get deployments -o jsonpath='{.status.availableReplicas}')" != "$(kubectl get deployments -o jsonpath='{.spec.replicas}')" ]; then
      echo "Deployment failed, rolling back"
      kubectl rollout undo deployment/my-app
      exit 1
    else
      echo "Deployment successful"
    fi

- name: Send Notifications
  if: failure()
  uses: actions/email@v2
  with:
    to: joshuadevops@engineer.com
    subject: Deployment Failed
    body: Deployment of the application failed, please check the logs for more information.
